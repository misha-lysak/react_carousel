{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","state","images","props","step","frameSize","itemWidth","animationDuration","translateX","slideRight","maxWidth","length","setState","slideLeft","this","width","className","style","transform","transition","map","image","index","key","src","alt","type","onClick","React","Component","App","infinite","ReactDOM","render","document","getElementById"],"mappings":"kOAKaA,G,YAAb,4MACEC,MAAQ,CACNC,OAAQ,EAAKC,MAAMD,OACnBE,KAAM,EAAKD,MAAMC,KACjBC,UAAW,EAAKF,MAAME,UACtBC,UAAW,EAAKH,MAAMG,UACtBC,kBAAmB,EAAKJ,MAAMI,kBAC9BC,WAAY,GAPhB,EAUEC,WAAa,WAAO,IACZD,EAAe,EAAKP,MAApBO,WADW,EAEmB,EAAKP,MAAjCC,EAFS,EAETA,OAAQI,EAFC,EAEDA,UAAWF,EAFV,EAEUA,KAErBM,EAAWR,EAAOS,OAASL,EAAwB,EAAZA,EAEzCE,GAAcE,EAAuB,EAAZJ,EAC3B,EAAKM,SAAS,CACZJ,WAAYE,IAGd,EAAKE,SAAS,CACZJ,WAAYA,GAAcF,EAAYF,KAtB9C,EA2BES,UAAY,WAAO,IACXL,EAAe,EAAKP,MAApBO,WADU,EAEY,EAAKP,MAAzBK,EAFQ,EAERA,UAAWF,EAFH,EAEGA,KAEfI,GAA0B,EAAZF,EAChB,EAAKM,SAAS,CACZJ,WAAY,IAGd,EAAKI,SAAS,CACZJ,WAAYA,GAAcF,EAAYF,KArC9C,4CA0CE,WAAU,IAAD,EAOHU,KAAKb,MALPC,EAFK,EAELA,OACAG,EAHK,EAGLA,UACAC,EAJK,EAILA,UACAC,EALK,EAKLA,kBACAC,EANK,EAMLA,WAGIO,EAAST,EAAYD,EAE3B,OACE,yBACEW,UAAU,WACVC,MAAO,CACLP,SAAS,GAAD,OAAKK,EAAL,QAGV,wBACEC,UAAU,iBACVC,MAAO,CACLC,UAAU,cAAD,QAAiBV,EAAjB,OACTW,WAAW,aAAD,OAAeZ,EAAf,QAGXL,EAAOkB,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKF,GACP,yBACEG,IAAKH,EACLI,IAAKH,EACLL,MAAO,CACLF,MAAM,GAAD,OAAKT,EAAL,cAOf,4BAAQoB,KAAK,SAASC,QAASb,KAAKD,WAApC,QACA,4BAAQa,KAAK,SAASC,QAASb,KAAKL,YAApC,aAjFR,GAA8BmB,IAAMC,YCqCrBC,E,4MApCb7B,MAAQ,CACNC,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WAAU,IACAA,EAAWY,KAAKb,MAAhBC,OAER,OACE,yBAAKc,UAAU,OAEb,6CAAmBd,EAAOS,OAA1B,WAEA,kBAAC,EAAD,CACET,OAAQA,EACRE,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBwB,UAAU,S,GA9BFH,IAAMC,WCDxBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0e30a7f8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nexport class Carousel extends React.Component {\n  state = {\n    images: this.props.images,\n    step: this.props.step,\n    frameSize: this.props.frameSize,\n    itemWidth: this.props.itemWidth,\n    animationDuration: this.props.animationDuration,\n    translateX: 0,\n  }\n\n  slideRight = () => {\n    let { translateX } = this.state;\n    const { images, itemWidth, step } = this.state;\n\n    const maxWidth = images.length * itemWidth - itemWidth * 3;\n\n    if (translateX >= maxWidth - itemWidth * 2) {\n      this.setState({\n        translateX: maxWidth,\n      });\n    } else {\n      this.setState({\n        translateX: translateX += itemWidth * step,\n      });\n    }\n  }\n\n  slideLeft = () => {\n    let { translateX } = this.state;\n    const { itemWidth, step } = this.state;\n\n    if (translateX <= itemWidth * 3) {\n      this.setState({\n        translateX: 0,\n      });\n    } else {\n      this.setState({\n        translateX: translateX -= itemWidth * step,\n      });\n    }\n  }\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      translateX,\n    } = this.state;\n\n    const width = (itemWidth * frameSize);\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          maxWidth: `${width}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${-translateX}px)`,\n            transition: `transform ${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={index}\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button type=\"button\" onClick={this.slideLeft}>Prev</button>\n        <button type=\"button\" onClick={this.slideRight}>Next</button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { Carousel } from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}