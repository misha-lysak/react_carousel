{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","state","currentPosition","slideRight","props","images","itemWidth","step","maxWidth","length","setState","slideLeft","this","frameSize","animationDuration","width","className","style","transform","transition","map","image","index","key","src","alt","disabled","type","onClick","React","Component","App","infinite","ReactDOM","render","document","getElementById"],"mappings":"kOAKaA,G,YAAb,4MACEC,MAAQ,CACNC,gBAAiB,GAFrB,EAKEC,WAAa,WAAO,IACZD,EAAoB,EAAKD,MAAzBC,gBADW,EAEmB,EAAKE,MAAjCC,EAFS,EAETA,OAAQC,EAFC,EAEDA,UAAWC,EAFV,EAEUA,KAErBC,EAAWH,EAAOI,OAASH,EAAwB,EAAZA,EAEzCJ,GAAmBM,EAAuB,EAAZF,EAChC,EAAKI,SAAS,CACZR,gBAAiBM,IAGnB,EAAKE,SAAS,CACZR,gBAAiBA,GAAmBI,EAAYC,KAjBxD,EAsBEI,UAAY,WAAO,IACXT,EAAoB,EAAKD,MAAzBC,gBADU,EAEY,EAAKE,MAAzBE,EAFQ,EAERA,UAAWC,EAFH,EAEGA,KAEfL,GAA+B,EAAZI,EACrB,EAAKI,SAAS,CACZR,gBAAiB,IAGnB,EAAKQ,SAAS,CACZR,gBAAiBA,GAAmBI,EAAYC,KAhCxD,4CAqCE,WAAU,IAAD,EAMHK,KAAKR,MAJPC,EAFK,EAELA,OACAQ,EAHK,EAGLA,UACAP,EAJK,EAILA,UACAQ,EALK,EAKLA,kBAIAZ,EACEU,KAAKX,MADPC,gBAGIa,EAAST,EAAYO,EACrBL,EAAWH,EAAOI,OAASH,EAAwB,EAAZA,EAE7C,OACE,yBACEU,UAAU,WACVC,MAAO,CACLT,SAAS,GAAD,OAAKO,EAAL,QAGV,wBACEC,UAAU,iBACVC,MAAO,CACLC,UAAU,cAAD,QAAiBhB,EAAjB,OACTiB,WAAW,aAAD,OAAeL,EAAf,QAGXT,EAAOe,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKF,GACP,yBACEG,IAAKH,EACLI,IAAKH,EACLL,MAAO,CACLF,MAAM,GAAD,OAAKT,EAAL,cAOf,4BACEoB,SAA8B,IAApBxB,EACVyB,KAAK,SACLC,QAAShB,KAAKD,WAHhB,QAOA,4BACEe,SAAUxB,IAAoBM,EAC9BmB,KAAK,SACLC,QAAShB,KAAKT,YAHhB,aAtFR,GAA8B0B,IAAMC,YCqCrBC,E,4MApCb9B,MAAQ,CACNI,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WAAU,IACAA,EAAWO,KAAKX,MAAhBI,OAER,OACE,yBAAKW,UAAU,OAEb,6CAAmBX,EAAOI,OAA1B,WAEA,kBAAC,EAAD,CACEJ,OAAQA,EACRE,KAAM,EACNM,UAAW,EACXP,UAAW,IACXQ,kBAAmB,IACnBkB,UAAU,S,GA9BFH,IAAMC,WCDxBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ad988eeb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nexport class Carousel extends React.Component {\n  state = {\n    currentPosition: 0,\n  }\n\n  slideRight = () => {\n    let { currentPosition } = this.state;\n    const { images, itemWidth, step } = this.props;\n\n    const maxWidth = images.length * itemWidth - itemWidth * 3;\n\n    if (currentPosition >= maxWidth - itemWidth * 2) {\n      this.setState({\n        currentPosition: maxWidth,\n      });\n    } else {\n      this.setState({\n        currentPosition: currentPosition += itemWidth * step,\n      });\n    }\n  }\n\n  slideLeft = () => {\n    let { currentPosition } = this.state;\n    const { itemWidth, step } = this.props;\n\n    if (currentPosition <= itemWidth * 3) {\n      this.setState({\n        currentPosition: 0,\n      });\n    } else {\n      this.setState({\n        currentPosition: currentPosition -= itemWidth * step,\n      });\n    }\n  }\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const {\n      currentPosition,\n    } = this.state;\n\n    const width = (itemWidth * frameSize);\n    const maxWidth = images.length * itemWidth - itemWidth * 3;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          maxWidth: `${width}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${-currentPosition}px)`,\n            transition: `transform ${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={index}\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          disabled={currentPosition === 0}\n          type=\"button\"\n          onClick={this.slideLeft}\n        >\n          Prev\n        </button>\n        <button\n          disabled={currentPosition === maxWidth}\n          type=\"button\"\n          onClick={this.slideRight}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { Carousel } from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}